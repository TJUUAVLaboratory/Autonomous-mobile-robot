## global_costmap: static_layer obstacle_layer  inflation_layer

# global_planner plugin
# 
# - navfn/NavfnROS  A* or D*
# - global_planner/GlobalPlanner
# - voronoi_planner/VoronoiPlanner
# - carrot_planner/CarrotPlanner  test 从当前点到目标点的一条直线
base_global_planner: global_planner/GlobalPlanner

planner_frequency: 0.1
planner_patience: 5.0 ##全局规划的最大时间

global_costmap:
   global_frame: /map
   robot_base_frame: /base_link
   update_frequency: 1.0
   publish_frequency: 0   
   rolling_window: false
   resolution: 0.05  ## m/pixel
   transform_tolerance: 1.0
   plugins:
      - {name: global_static_layer,    type: "costmap_2d::StaticLayer"   }
      - {name: global_obstacles_laser, type: "costmap_2d::ObstacleLayer" }
      - {name: global_inflation_layer, type: "costmap_2d::InflationLayer"}

   global_static_layer:
      static_map: true
      #  map_topic:
      # unknown_cost_value:
      # lethal_cost_threshold:
      # track_unknown_space:

   global_obstacles_laser:
      max_obstacle_height: 2.0
      map_type: costmap  ## voxel
      min_obstacle_height: 0.2
      raytrace_range: 3.0
      obstacle_range: 2.5   ## local_costmap
      # track_unknown_space:
      observation_sources: scan
      scan: {data_type: LaserScan, topic: /scan, marking: true, clearing: true, expected_update_rate: 0}


   global_inflation_layer:
      inflation_radius: 0.35
      robot_radius:   0.5     ## robot footprint 300mm
      footprint: "[[-0.5, 0.0], [0.2, 0.4], [0.2, 0.0], [0.2, -0.4], [-0.5, 0.0]]"
    

### static layer
   static_map: true
  #  map_topic:
  # unknown_cost_value:
  # lethal_cost_threshold:
  # track_unknown_space:


### obstacle_layer
   map_type: costmap  ## voxel 
   max_obstacle_height: 2.0
   min_obstacle_height: 0.2
   raytrace_range: 3.0
   obstacle_range: 2.5   ## local_costmap 
  # track_unknown_space:
   observation_sources: scan
   scan: {data_type: LaserScan, topic: /scan, marking: true, clearing: true, expected_update_rate: 0}

### inflation_layer
   inflation_layer: true
   inflation_radius: 0.35
   robot_radius:   0.5     ## robot footprint 300mm
   footprint: "[[-0.5, 0.0], [0.2, 0.4], [0.2, 0.0], [0.2, -0.4], [-0.5, 0.0]]"
    





  
## GlobalPlanner
GlobalPlanner:
    old_navfn_behavior: false
   # use_quadratic: true   ## use Quadratic_Calculator or Potential_Calculator
    use_dijkstra: true  ## use dijkstra or A*
   # use_grid_path: true ## use GridPath or Gradient Path

VoronoiPlanner:
   weight_data: 0.5
   weight_smooth: 0.7