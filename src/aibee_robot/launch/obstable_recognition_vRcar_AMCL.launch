
<launch>
<!-- ***************************** ROS Navigation ************************************ -->
<!--map_server 加载本地地图-->
<!-- pointcloud_to_laserscan 进行laserScan数据获取 -->
<!--AMCL 定位-->
<!--move_base 进行导航-->



<!--map_server-->
    <!-- 设置地图的配置文件 -->
    <arg name="map" default="a.yaml" />
    <!--<arg name="map" default="blank_map_with_obstacle.yaml" />    -->
    <!-- 运行地图服务器，并且加载设置的地图-->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find aibee_robot)/maps/$(arg map)"/>


  <arg name="ladir_name" default="velodyne_points" />
    <arg name="ladir_frame_id" default="horizontal_vlp16_link" />
    <!-- run pointcloud_to_laserscan node -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" output="screen">
        <!-- 输入数据的 3D Pointclude2 topic 映射成到 cloud_in-->
        <remap from="cloud_in" to="/static_velodyne/velodyne_points"/>
                
        <remap from="scan" to="/scan"/>
        <rosparam>
            target_frame: horizontal_vlp16_link   # Leave disabled to output scan in pointcloud frame
            <!--target_frame: velodyne   # Leave disabled to output scan in pointcloud frame-->
            transform_tolerance: 0.01
            min_height: -2.0
            max_height: 2.0

            angle_min: -M_PI        # -M_PI
            angle_max: M_PI         # M_PI
            angle_increment: 2M_PI/720  # 2M_PI/720
            scan_time: 1/30.0          #  out put 30Hz
            range_min: 0.4
            range_max: 50.0
            use_inf:  true
            inf_epsilon: 10.0

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>
    </node>



<!--AMCL 定位-->
<arg name="use_map_topic" default="false"/>
    <arg name="scan_topic" default="scan"/>

    <node pkg="amcl" type="amcl" name="amcl" clear_params="true">
        <param name="use_map_topic" value="$(arg use_map_topic)"/>
        <!-- Publish scans from best pose at a max of 10 Hz -->
        <param name="odom_model_type" value="diff"/>
        <param name="odom_alpha5" value="0.1"/>
        <param name="gui_publish_rate" value="10.0"/>
        <param name="laser_max_beams" value="60"/>
        <param name="laser_max_range" value="12.0"/>
        <param name="min_particles" value="500"/>
        <param name="max_particles" value="2000"/>
        <param name="kld_err" value="0.05"/>
        <param name="kld_z" value="0.99"/>
        <param name="odom_alpha1" value="0.2"/>
        <param name="odom_alpha2" value="0.2"/>
        <!-- translation std dev, m -->
        <param name="odom_alpha3" value="0.2"/>
        <param name="odom_alpha4" value="0.2"/>
        <param name="laser_z_hit" value="0.5"/>
        <param name="laser_z_short" value="0.05"/>
        <param name="laser_z_max" value="0.05"/>
        <param name="laser_z_rand" value="0.5"/>
        <param name="laser_sigma_hit" value="0.2"/>
        <param name="laser_lambda_short" value="0.1"/>
        <param name="laser_model_type" value="likelihood_field"/>
        <!-- <param name="laser_model_type" value="beam"/> -->
        <param name="laser_likelihood_max_dist" value="2.0"/>
        <param name="update_min_d" value="0.25"/>
        <param name="update_min_a" value="0.2"/>
        <param name="odom_frame_id" value="odom"/>
        <param name="resample_interval" value="1"/>
        <!-- Increase tolerance because the computer can get quite busy -->
        <param name="transform_tolerance" value="1.0"/>
        <param name="recovery_alpha_slow" value="0.0"/>
        <param name="recovery_alpha_fast" value="0.0"/>
        <remap from="scan" to="$(arg scan_topic)"/>
    </node>

<!--move_base action-->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" clear_params="true">
    <rosparam file="$(find aibee_robot)/config/mrobot/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find aibee_robot)/config/mrobot/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find aibee_robot)/config/mrobot/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find aibee_robot)/config/mrobot/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find aibee_robot)/config/mrobot/base_local_planner_params.yaml" command="load" />
  </node>

    <!-- node function: 订阅ipad点位, 利用movebase 导航到对应位置-->
    <node name="obstable_navigatoin" pkg="obstable_navigatoin" type="obstable_navigatoin_node" output="screen" >
    </node>


    <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 1 map odom 20" />

<!-- 运行rviz -->
    <!--<node pkg="rviz" type="rviz" name="rviz" args="-d $(find aibee_robot)/rviz/obstable.rviz"/>-->

</launch>

